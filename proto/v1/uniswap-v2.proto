syntax = "proto3";

package evm.uniswap.v2;

// https://github.com/Uniswap/v2-core/blob/master/contracts/UniswapV2Pair.sol
// https://github.com/Uniswap/v2-core/blob/master/contracts/UniswapV2Factory.sol
message Events {
  // UniswapV2Pair
  repeated Swap swap = 1;
  repeated Sync sync = 2;
  repeated Mint mint = 3;
  repeated Burn burn = 4;

  // UniswapV2Factory
  repeated PairCreated pair_created = 5;
}

message PairCreated {
  // -- transaction --
  bytes tx_hash = 1;

  // -- call --
  optional bytes caller = 2;

  // -- log --
  bytes contract = 3; // log.address (factory)
  uint64 ordinal = 4; // log.ordinal

  // -- event --
  bytes token0 = 10;
  bytes token1 = 11;
  bytes pair = 12;
  uint64 all_pairs_length = 13; // total number of pairs created
}

message Sync {
  // -- transaction --
  bytes tx_hash = 1;

  // -- call --
  optional bytes caller = 2;

  // -- log --
  bytes contract = 3; // log.address
  uint64 ordinal = 4; // log.ordinal

  // -- event --
  string reserve0 = 21; // uint112
  string reserve1 = 22; // uint112
}

message Swap {
  // -- transaction --
  bytes tx_hash = 1;

  // -- call --
  optional bytes caller = 2;

  // -- log --
  bytes contract = 3; // log.address
  uint64 ordinal = 4; // log.ordinal

  // -- event --
  bytes sender = 10;
  string amount0_in = 11; // uint256
  string amount0_out = 12; // uint256
  string amount1_in = 13; // uint256
  string amount1_out = 14; // uint256
  bytes to = 15; // address
}

message Mint {
  // -- transaction --
  bytes tx_hash = 1;

  // -- call --
  optional bytes caller = 2;

  // -- log --
  bytes contract = 3; // log.address
  uint64 ordinal = 4; // log.ordinal

  // -- event --
  bytes sender = 10; // address
  string amount0 = 11; // uint256
  string amount1 = 12; // uint256
}

message Burn {
  // -- transaction --
  bytes tx_hash = 1;

  // -- call --
  optional bytes caller = 2;

  // -- log --
  bytes contract = 3; // log.address
  uint64 ordinal = 4; // log.ordinal

  // -- event --
  bytes sender = 10; // address
  string amount0 = 11; // uint256
  string amount1 = 12; // uint256
  bytes to = 13; // address
}