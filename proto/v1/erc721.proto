syntax = "proto3";

package evm.erc721.v1;

message Events {
  repeated Transfer transfers = 1;
  repeated Approval approvals = 2;
  repeated ApprovalForAll approvals_for_all = 3;
}

message EventsMetadata {
  repeated Metadata metadatas = 1;
}

message Metadata {
  bytes contract = 1; // log.address
  string token_id = 2; // uint256

  // ERC721 Metadata
  // https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol
  optional string uri = 3; // 0xc87b56dd: tokenURI(uint256 tokenId) -> string
  optional string symbol = 4; // 0x95d89b41: symbol() -> string
  optional string name = 5; // 0x61a4422b: name() -> string
  optional string base_uri = 6; // 0x6c0360eb: baseURI() -> string
  optional string total_supply = 7; // 0x18160ddd: totalSupply() -> uint256
}

message Transfer {
  // -- transaction --
  bytes tx_hash = 1;

  // -- caller --
  optional bytes caller = 2; // call.caller (only available in Extended blocks)

  // -- log --
  bytes contract = 3; // log.address
  uint64 ordinal = 4; // log.ordinal

  // -- event --
  bytes from = 10; // The person that sent the transfer.
  bytes to = 11; // The person that received the transfer.
  string token_id = 12; // TokenID the identifier of the token for which the transfer is happening.
}

message Approval {
  // -- transaction --
  bytes tx_hash = 1;

  // -- caller --
  optional bytes caller = 2; // call.caller (only available in Extended blocks)

  // -- log --
  bytes contract = 3; // log.address
  uint64 ordinal = 4; // log.ordinal

  // -- event --
  bytes owner = 10; // address
  bytes approved = 11; // address
  string token_id = 12; // uint256
}

message ApprovalForAll {
  // -- transaction --
  bytes tx_hash = 1;

  // -- caller --
  optional bytes caller = 2; // call.caller (only available in Extended blocks)

  // -- log --
  bytes contract = 3; // log.address
  uint64 ordinal = 4; // log.ordinal

  // -- event --
  bytes owner = 10; // address
  bytes operator = 11; // address
  bool approved = 12; // true/false
}
